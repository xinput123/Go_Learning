package main

func main() {
	// go语言中，只有局部变量才可以这么复制
	a := 1
	println("a =", a)

	/*
		    & 在go中有多重意思。
			当用作二元操作符时，它是按位与操作。
			当用作一元操作符时，它返回的是操作数的地址，该地址可由一个指针保存
	*/
	pi := &a
	println("a的地址：", pi)

	/*
		     *操作符
			 当用作二元操作符时，它将其操作数相乘
		     当用作一元操作符时，它返回它所作用对的指针所指向变量的值
	*/
	c := *pi
	println("地址p中存储的值：", c)

}
